version: '3'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    container_name: elasticsearch
    environment:
      - "discovery.type=single-node"
    ports:
      - "9200:9200"
    networks:
      - npage


  logstash:
    image: docker.elastic.co/logstash/logstash:7.10.2
    container_name: logstash
    volumes:
      - ./backend/logging/:/logging/
      - ./backend/logging/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./backend/logging/logstash/pipeline:/usr/share/logstash/pipeline
    ports:
      - "5044:5044"
    networks:
      - npage
    depends_on:
      - elasticsearch


  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.2
    container_name: kibana
    ports:
      - "5601:5601"
    networks:
      - npage
    depends_on:
      - elasticsearch


  filebeat:
    image: docker.elastic.co/beats/filebeat:7.10.2
    container_name: filebeat
    volumes:
      - ./backend/logging:/logging
      - ./backend/logging/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./nginx/log:/var/log/nginx # nginx 로그를 호스트와 컨테이너 간에 공유
    networks:
      - npage
    depends_on:
      - logstash
    command: filebeat -e -c /usr/share/filebeat/filebeat.yml


  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - "9100:9100"
    networks:
      - npage
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro


  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./backend/data/prometheus/config/:/etc/prometheus/
      - ./backend/data/prometheus/volume:/prometheus
    ports:
      - 9090:9090
    command: # web.enalbe-lifecycle은 api 재시작없이 설정파일들을 reload 할 수 있게 해줌
      - '--web.enable-lifecycle'
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: always
    depends_on:
      - backend
      - cadvisor
    networks:
      - npage


  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GRAFANA_DEFAULT_USER=admin
      - GRAFANA_DEFAULT_PASS=nextpage
      - GRAFANA_DEFAULT_VHOST=npage_host
    depends_on:
      - prometheus
    links:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - ./backend/data/grafana:/var/lib/grafana
    restart: always
    networks:
      - npage

  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor:v0.45.0
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    networks:
      - npage
    restart: always

volumes:
  nextpage-db:


networks:
  npage: